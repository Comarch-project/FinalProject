        lw      0       1       n               // $1 = n which is the input of the function
        lw      0       3       pos1            // $3 = 1 (initialize f(1) note that f(0) was alreay 0 and store at $2)
        beq     1       2       done            // if n == 0 then return and result will store at $2      
        beq     1       3       nIs1            // if n == 1 then go to nIs1
loop    add     2       3       4               // $4 = $3 + $2 (f(n)=f(n-1)+f(n-2))
        sw      6       3       stack           // save f(n-1) to stack (act a f(n-2) for next loop)
        lw      0       7       pos1            // $7 = 1
        add     6       7       6               // increment stack pointer
        sw      6       4       stack           // save f(n) to stack (act a f(n-1) for next loop)
        lw      6       3       stack           // load f(n) to $3           
        lw      0       7       neg1            // $7 = -1
        add     6       7       6               // decrement stack pointer    
        lw      6       2       stack           // load f(n-1) to $2   
        add     1       7       1               // decrease n(loop) by 1
        beq     1       0       done            // if n==0 end of the program
        beq     0       0       loop            // else loop the program               
done    halt                                    // end the programe (result will be at $2)
nIs1    add     2       3       2               // $2 = $2 + 1
        lw      0       7       neg1            // $7 = -1
        add     1       7       1               // $1 = $1 - 1
        beq     0       0       done            // return and the result will be at $2
n       .fill 4
pos1    .fill 1
neg1    .fill -1
stack   .fill 0
